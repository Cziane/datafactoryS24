{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dstidatafactory"
		},
		"MyAzureStorageAccount_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MyAzureStorageAccount'"
		},
		"UserDatabase_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'UserDatabase'"
		},
		"UserDatabase_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "cziane.database.windows.net"
		},
		"UserDatabase_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "users"
		},
		"UserDatabase_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "cziane"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MyAzureStorageAccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('MyAzureStorageAccount_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('UserDatabase_properties_typeProperties_server')]",
					"database": "[parameters('UserDatabase_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('UserDatabase_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('UserDatabase_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesCentralizedDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "UserDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SaleID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StoreID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SaleDate",
						"type": "date"
					},
					{
						"name": "QuantitySold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "TotalSales",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RetailSalesCleaned"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UserDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesPOS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "retail_sales_example.csv",
						"container": "sales-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SaleID",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "StoreID",
						"type": "String"
					},
					{
						"name": "SaleDate",
						"type": "String"
					},
					{
						"name": "QuantitySold",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MyAzureStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserName')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "user_names.csv",
						"container": "users"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MyAzureStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "UserDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Users"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UserDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyUser')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Csv2SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UserName",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UserTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UserName')]",
				"[concat(variables('factoryId'), '/datasets/UserTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesCSV2SQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SalesPOS",
								"type": "DatasetReference"
							},
							"name": "CsvSales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SalesCentralizedDB",
								"type": "DatasetReference"
							},
							"name": "CentralizedSQL"
						}
					],
					"transformations": [
						{
							"name": "CleansingData"
						},
						{
							"name": "FormatDate"
						},
						{
							"name": "RemoveWrongDate"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SaleID as string,",
						"          ProductID as string,",
						"          StoreID as string,",
						"          SaleDate as string,",
						"          QuantitySold as double,",
						"          Price as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false) ~> CsvSales",
						"CsvSales filter(( !isNull(QuantitySold) && QuantitySold > 0 && !isNull(Price) && Price >0  )) ~> CleansingData",
						"CleansingData derive(TotalSales = QuantitySold*Price) ~> FormatDate",
						"FormatDate filter(!isNull(SaleDate)) ~> RemoveWrongDate",
						"RemoveWrongDate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SaleID as integer,",
						"          ProductID as integer,",
						"          StoreID as integer,",
						"          SaleDate as date,",
						"          QuantitySold as integer,",
						"          Price as decimal(10,2),",
						"          TotalSales as decimal(10,2)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> CentralizedSQL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesPOS')]",
				"[concat(variables('factoryId'), '/datasets/SalesCentralizedDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SalesCSV2SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SalesCSV2SQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CsvSales": {},
									"CentralizedSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SalesCSV2SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Every2min')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyUser",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2024-10-29T10:21:00",
						"endTime": "2024-10-30T10:29:00",
						"timeZone": "Romance Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyUser')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailySales')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SalesPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-10-29T11:05:00",
						"timeZone": "Romance Standard Time",
						"schedule": {}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SalesPipeline')]"
			]
		}
	]
}